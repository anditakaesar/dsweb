{"version":3,"sources":["../../src/routers/edit.js"],"names":["editRouter","Entry","db","puppeteer","require","use","req","res","next","session","user","role","ROLES","STAFF","data","message","render","get","createPDF","entry","templateHtml","fs","readFileSync","path","join","process","cwd","template","handlebars","compile","html","launch","args","headless","browser","newPage","page","waitUntil","pdf","close","nextTick","findByPk","params","id","then","set","length","send","err","json","errmsg"],"mappings":"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","sourcesContent":["import { Router } from 'express'\r\nimport { ROLES } from '../helper/constants/roles'\r\nimport db from '../helper/db'\r\nimport FormatEntry from '../helper/entry'\r\nimport handlebars from 'handlebars'\r\nimport fs from 'fs'\r\nimport path from 'path'\r\n\r\nconst editRouter = Router()\r\nconst { Entry } = db\r\nconst puppeteer = require('puppeteer')\r\n\r\neditRouter.use((req, res, next) => {\r\n  if (req.session.user.role === ROLES.STAFF) {\r\n    next()\r\n  } else {\r\n    res.data.message = 'Unauthorized'\r\n    res.render('error', {\r\n      data: {\r\n        ...res.data,\r\n        user: req.session.user,\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\neditRouter.get('/', (req, res) => {\r\n  res.render('edit', {\r\n    data: {\r\n      ...res.data,\r\n      user: req.session.user,\r\n    }\r\n  })\r\n})\r\n\r\neditRouter.get('/list', (req, res) => {\r\n  res.render('edit-listing', {\r\n    data: {\r\n      ...res.data,\r\n      user: req.session.user,\r\n    }\r\n  })\r\n})\r\n\r\nasync function createPDF(entry) {\r\n  let templateHtml = fs.readFileSync(path.join(process.cwd(), 'views', 'doc_template.hbs'), 'utf-8')\r\n  let template = handlebars.compile(templateHtml)\r\n  let html = template(FormatEntry(entry))\r\n\r\n  const browser = await puppeteer.launch({ args: ['--no-sandbox'], headless: true })\r\n  let page = await browser.newPage();\r\n  await page.goto(`data:text/html;charset=UTF-8,${html}`, {\r\n    waitUntil: 'networkidle0'\r\n  })\r\n\r\n  const pdf = await page.pdf()\r\n  await browser.close()\r\n  return pdf\r\n}\r\n\r\neditRouter.get('/pdf/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n\r\n    Entry.findByPk(req.params.id)\r\n      .then((entry) => {\r\n        createPDF(entry)\r\n          .then((pdf) => {\r\n            res.set({ 'Content-Type': 'application/pdf', 'Content-Length': pdf.length })\r\n            res.send(pdf)\r\n          })\r\n      })\r\n      .catch((err) => {\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n\r\n  })\r\n})\r\n\r\nexport default editRouter"],"file":"edit.js"}