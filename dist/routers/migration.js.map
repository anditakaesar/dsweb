{"version":3,"sources":["../../src/routers/migration.js"],"names":["router","sequelize","db","umzug","Umzug","storage","storageOptions","migrations","params","getQueryInterface","Sequelize","path","get","req","res","next","query","key","env","MIGRATION_KEY","logger","info","sendStatus","process","nextTick","up","then","mgs","forEach","v","i","push","file","json","message","err","error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AACA,IAAQC,SAAR,GAAsBC,cAAtB,CAAQD,SAAR;AACA,IAAME,KAAK,GAAG,IAAIC,iBAAJ,CAAU;AACtBC,EAAAA,OAAO,EAAE,WADa;AAEtBC,EAAAA,cAAc,EAAE;AACdL,IAAAA,SAAS,EAATA;AADc,GAFM;AAMtBM,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,CACNP,SAAS,CAACQ,iBAAV,EADM,EAENC,qBAFM,CADE;AAKVC,IAAAA,IAAI,EAAE;AALI;AANU,CAAV,CAAd;AAeAX,MAAM,CAACY,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,MAAIF,GAAG,CAACG,KAAJ,CAAUC,GAAV,KAAkBC,gBAAIC,aAA1B,EAAyC;AACvCC,uBAAOC,IAAP,CAAY,mBAAZ,EAAiC;AAAEJ,MAAAA,GAAG,EAAEJ,GAAG,CAACG,KAAJ,CAAUC;AAAjB,KAAjC;;AACAH,IAAAA,GAAG,CAACQ,UAAJ,CAAe,GAAf;AACD,GAHD,MAGO;AACLP,IAAAA,IAAI;AACL;AACF,CAPD,EAOG,UAACF,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrBQ,EAAAA,OAAO,CAACC,QAAR,CAAiB,YAAM;AACrB,QAAIjB,UAAU,GAAG,EAAjB;AACAJ,IAAAA,KAAK,CAACsB,EAAN,GACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACbA,MAAAA,GAAG,CAACC,OAAJ,CAAY,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpBvB,QAAAA,UAAU,CAACwB,IAAX,CAAgBF,CAAC,CAACG,IAAlB;AACD,OAFD;;AAGAZ,yBAAOC,IAAP,CAAY,oBAAZ,EAAkC;AAChCd,QAAAA,UAAU,EAAVA;AADgC,OAAlC;;AAGAO,MAAAA,GAAG,CAACmB,IAAJ,CAAS;AACPC,QAAAA,OAAO,EAAE,qBADF;AAEP3B,QAAAA,UAAU,EAAVA;AAFO,OAAT;AAID,KAZH,WAaS,UAAC4B,GAAD,EAAS;AACdf,yBAAOgB,KAAP,CAAaD,GAAG,CAACD,OAAjB,EAA0B,6BAASC,GAAT,EAActB,GAAd,CAA1B;;AACAE,MAAAA,IAAI,CAACoB,GAAD,CAAJ;AACD,KAhBH;AAiBD,GAnBD;AAoBD,CA5BD;eA8BenC,M","sourcesContent":["import { Router } from 'express'\r\nimport Umzug from 'umzug'\r\nimport Sequelize from 'sequelize'\r\nimport db from '../helper/db'\r\nimport logger from '../logger'\r\nimport env from '../env'\r\nimport genError from '../helper/errorHelper'\r\n\r\nconst router = Router()\r\nconst { sequelize } = db\r\nconst umzug = new Umzug({\r\n  storage: 'sequelize',\r\n  storageOptions: {\r\n    sequelize,\r\n  },\r\n\r\n  migrations: {\r\n    params: [\r\n      sequelize.getQueryInterface(),\r\n      Sequelize,\r\n    ],\r\n    path: './migrations'\r\n  },\r\n})\r\n\r\nrouter.get('/', (req, res, next) => {\r\n  if (req.query.key !== env.MIGRATION_KEY) {\r\n    logger.info('migration attempt', { key: req.query.key })\r\n    res.sendStatus(404)\r\n  } else {\r\n    next()\r\n  }\r\n}, (req, res, next) => {\r\n  process.nextTick(() => {\r\n    let migrations = []\r\n    umzug.up()\r\n      .then((mgs) => {\r\n        mgs.forEach((v, i) => {\r\n          migrations.push(v.file)\r\n        })\r\n        logger.info('migration complete', {\r\n          migrations,\r\n        })\r\n        res.json({\r\n          message: 'migration completed',\r\n          migrations,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        logger.error(err.message, genError(err, req))\r\n        next(err)\r\n      })\r\n  })\r\n})\r\n\r\nexport default router"],"file":"migration.js"}