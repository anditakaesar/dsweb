{"version":3,"sources":["../../src/helper/db.js"],"names":["db","require","SequelizeStore","session","Store","sessionStorage","sequelize","umzug","Umzug","storage","storageOptions","migrations","params","getQueryInterface","Sequelize","path","migrateDatabase","up","then","mgs","forEach","v","i","push","file","length","logger","info","err","error","message"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCE,2BAAQC,KAA7C,CAAvB;;AACO,IAAMC,cAAc,GAAG,IAAIH,cAAJ,CAAmB;AAC/CF,EAAAA,EAAE,EAAEA,EAAE,CAACM;AADwC,CAAnB,CAAvB;;AAIP,IAAQA,SAAR,GAAsBN,EAAtB,CAAQM,SAAR;AACA,IAAMC,KAAK,GAAG,IAAIC,iBAAJ,CAAU;AACtBC,EAAAA,OAAO,EAAE,WADa;AAEtBC,EAAAA,cAAc,EAAE;AACdJ,IAAAA,SAAS,EAATA;AADc,GAFM;AAMtBK,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,CACNN,SAAS,CAACO,iBAAV,EADM,EAENC,qBAFM,CADE;AAKVC,IAAAA,IAAI,EAAE;AALI;AANU,CAAV,CAAd;;AAeO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,MAAIL,UAAU,GAAG,EAAjB;AACAJ,EAAAA,KAAK,CAACU,EAAN,GACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACbA,IAAAA,GAAG,CAACC,OAAJ,CAAY,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpBX,MAAAA,UAAU,CAACY,IAAX,CAAgBF,CAAC,CAACG,IAAlB;AACD,KAFD;;AAGA,QAAIb,UAAU,CAACc,MAAX,GAAoB,CAAxB,EAA2B;AACzBC,yBAAOC,IAAP,CAAY,oBAAZ,EAAkC;AAChChB,QAAAA,UAAU,EAAVA;AADgC,OAAlC;AAGD;;AACD,WAAOA,UAAP;AACD,GAXH,WAYS,UAACiB,GAAD,EAAS;AACdF,uBAAOG,KAAP,CAAaD,GAAG,CAACE,OAAjB,EAA0B,6BAASF,GAAT,EAAc,IAAd,CAA1B;;AACA,WAAOjB,UAAP;AACD,GAfH;AAgBD,CAlBM;;;eAoBQX,E","sourcesContent":["import session from 'express-session'\r\nimport Umzug from 'umzug'\r\nimport Sequelize from 'sequelize'\r\nimport genError from './errorHelper'\r\nimport logger from '../logger'\r\n\r\nconst db = require('../../models')\r\nconst SequelizeStore = require('connect-session-sequelize')(session.Store)\r\nexport const sessionStorage = new SequelizeStore({\r\n  db: db.sequelize,\r\n})\r\n\r\nconst { sequelize } = db\r\nconst umzug = new Umzug({\r\n  storage: 'sequelize',\r\n  storageOptions: {\r\n    sequelize,\r\n  },\r\n\r\n  migrations: {\r\n    params: [\r\n      sequelize.getQueryInterface(),\r\n      Sequelize,\r\n    ],\r\n    path: './migrations'\r\n  },\r\n})\r\n\r\nexport const migrateDatabase = () => {\r\n  let migrations = []\r\n  umzug.up()\r\n    .then((mgs) => {\r\n      mgs.forEach((v, i) => {\r\n        migrations.push(v.file)\r\n      })\r\n      if (migrations.length > 0) {\r\n        logger.info('migration complete', {\r\n          migrations,\r\n        })\r\n      }\r\n      return migrations\r\n    })\r\n    .catch((err) => {\r\n      logger.error(err.message, genError(err, null))\r\n      return migrations\r\n    })\r\n}\r\n\r\nexport default db"],"file":"db.js"}