{"version":3,"sources":["../../src/api/config.api.js"],"names":["configRouter","Config","db","FormatConfig","cfg","newConfig","id","configkey","configvalue","post","req","res","process","nextTick","create","body","then","json","message","messageType","data","err","helper","logger","error","next","params","undefined","findOne","where","Error","update","get","findAndCountAll","results","rows","forEach","i","push","count","result","config","errmsg","destroy"],"mappings":"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","sourcesContent":["import { Router } from 'express'\r\nimport db from '../helper/db'\r\nimport helper from '../helper'\r\nimport genError from '../helper/errorHelper'\r\n\r\nconst configRouter = Router()\r\nconst { Config } = db\r\n\r\nfunction FormatConfig(cfg) {\r\n  let newConfig = {}\r\n  newConfig.id = cfg.id\r\n  newConfig.configkey = cfg.configkey\r\n  newConfig.configvalue = cfg.configvalue\r\n  return newConfig\r\n}\r\n\r\nconfigRouter.post('/', (req, res) => {\r\n  process.nextTick(() => {\r\n    Config.create({\r\n      configkey: req.body.configkey,\r\n      configvalue: req.body.configvalue,\r\n    })\r\n      .then((cfg) => {\r\n        res.json({\r\n          message: 'save success',\r\n          messageType: 'primary',\r\n          data: cfg,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        err = genError(err, req)\r\n        helper.logger.error(err.message, err)\r\n        res.json({\r\n          message: `error: ${err.message}`,\r\n          messageType: 'danger'\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nconfigRouter.post('/:id', (req, res, next) => {\r\n  if (req.params.id == undefined) {\r\n    let error = genError(null, req)\r\n    error.message('params.id required')\r\n    next(error)\r\n  } else {\r\n    next()\r\n  }\r\n}, (req, res) => {\r\n  process.nextTick(() => {\r\n    Config.findOne({\r\n      where: { id: req.params.id },\r\n    })\r\n      .then((cfg) => {\r\n        if (!cfg) {\r\n          throw new Error(`no result for id ${req.params.id}`)\r\n        }\r\n        cfg.update({\r\n          configkey: req.body.configkey,\r\n          configvalue: req.body.configvalue,\r\n        })\r\n        res.json({\r\n          message: 'update success',\r\n          messageType: 'success',\r\n          data: cfg,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        err = genError(err, req)\r\n        helper.logger.error(err.message, err)\r\n        res.json({\r\n          message: `error: ${err.message}`,\r\n          messageType: 'danger'\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nconfigRouter.get('/all', (req, res) => {\r\n  process.nextTick(() => {\r\n    Config.findAndCountAll()\r\n      .then((results) => {\r\n        let data = []\r\n        results.rows.forEach((cfg, i) => {\r\n          data.push(FormatConfig(cfg))\r\n        })\r\n        res.json({\r\n          message: 'all config loaded',\r\n          messageType: 'primary',\r\n          data,\r\n          count: results.count,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        err = genError(err, req)\r\n        helper.logger.error(err.message, err)\r\n        res.json({\r\n          message: `error: ${err.message}`,\r\n          messageType: 'danger'\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nconfigRouter.get('/:id', (req, res, next) => {\r\n  if (req.params.id == undefined) {\r\n    let error = genError(null, req)\r\n    error.message('params.id required')\r\n    next(error)\r\n  } else {\r\n    next()\r\n  }\r\n}, (req, res) => {\r\n  process.nextTick(() => {\r\n    Config.findOne({\r\n      where: { id: req.params.id },\r\n    })\r\n      .then((result) => {\r\n        if (!result) {\r\n          throw new Error(`no result for id ${req.params.id}`)\r\n        }\r\n        res.json({\r\n          message: 'config loaded',\r\n          config: FormatConfig(result),\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        err = genError(err, req)\r\n        helper.logger.error(err.message, err)\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nconfigRouter.delete('/:id', (req, res, next) => {\r\n  if (req.params.id == undefined) {\r\n    let error = genError(null, req)\r\n    error.message('params.id required')\r\n    next(error)\r\n  } else {\r\n    next()\r\n  }\r\n}, (req, res) => {\r\n  process.nextTick(() => {\r\n    Config.destroy({\r\n      where: { id: req.params.id },\r\n    })\r\n      .then((result) => {\r\n        if (!result) {\r\n          throw new Error(`no result for id ${req.params.id}`)\r\n        }\r\n        res.json({\r\n          message: 'config deleted',\r\n          messageType: 'danger',\r\n          config: FormatConfig(result),\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        err = genError(err, req)\r\n        helper.logger.error(err.message, err)\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nexport default configRouter"],"file":"config.api.js"}