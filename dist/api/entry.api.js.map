{"version":3,"sources":["../../src/api/entry.api.js"],"names":["entryRouter","Entry","db","AddPositionName","entry","position","granteePositionName","newEntry","FormatEntryTable","AddZeros","prefixZeros","num","undefined","length","slice","NewPrefix","req","res","next","data","prefix","options","where","Sequelize","fn","col","max","then","numPrefix","lastPrefix","parseInt","isNaN","newPrefix","APP_OPTIONS","PREFIX_ZEROS","err","helper","logger","error","message","post","body","userId","session","user","id","empty","create","ent","json","messageType","get","process","nextTick","findAndCountAll","results","entries","rows","forEach","i","push","count","errmsg","getPosition","draw","offset","start","limit","xOc","order","column","xOcName","columns","xOd","dir","Object","keys","query","Op","or","funct","validValue","no","like","name","qName","toLowerCase","pos","granteePosition","from","travelDate","gte","to","pop","and","lte","v","recordsTotal","recordsFiltered","editedEntry","findByPk","params","update","numCombined","destroy","result"],"mappings":"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","sourcesContent":["import { Router } from 'express'\r\nimport db from '../helper/db'\r\nimport helper, { APP_OPTIONS } from '../helper'\r\nimport { Op, Sequelize } from 'sequelize'\r\nimport FormatEntry from '../helper/entry'\r\nimport genError from '../helper/errorHelper'\r\nimport { getPosition, getPositionName } from '../routers/edit'\r\n\r\nconst entryRouter = Router()\r\nconst { Entry } = db\r\n\r\nfunction AddPositionName(entry, position = []) {\r\n  let granteePositionName = getPositionName(entry, 'granteePosition', position)\r\n  let newEntry = {\r\n    ...entry,\r\n    granteePositionName\r\n  }\r\n\r\n  return newEntry\r\n}\r\n\r\nfunction FormatEntryTable(entry, position = []) {\r\n  let newEntry = FormatEntry(entry)\r\n  newEntry = AddPositionName(newEntry, position)\r\n\r\n  return newEntry\r\n}\r\n\r\nfunction AddZeros(prefixZeros, num) {\r\n  if (prefixZeros != undefined\r\n    && prefixZeros != null\r\n    && prefixZeros.length > 0\r\n    && num != undefined\r\n    && num != null\r\n    && num > 0) {\r\n    return (prefixZeros + num).slice(-prefixZeros.length)\r\n  } else {\r\n    return 'NULL'\r\n  }\r\n}\r\n\r\nconst NewPrefix = (req, res, next) => {\r\n  res.data.prefix = 'NNN'\r\n  let options = {\r\n    where: Sequelize.where(\r\n    Sequelize.fn('strftime', '%Y', Sequelize.col('createdAt')),\r\n    Sequelize.fn('strftime', '%Y', 'now')\r\n  )}\r\n\r\n  Entry.max('numPrefix', options)\r\n    .then((numPrefix) => {\r\n      if (numPrefix) {\r\n        let lastPrefix = parseInt(numPrefix, 10)\r\n        lastPrefix = isNaN(lastPrefix) ? 0 : lastPrefix\r\n        let newPrefix = AddZeros(APP_OPTIONS.PREFIX_ZEROS, lastPrefix + 1)\r\n        res.data.prefix = newPrefix\r\n      } else {\r\n        res.data.prefix = AddZeros(APP_OPTIONS.PREFIX_ZEROS, 1)\r\n      }\r\n      next()\r\n    })\r\n    .catch((err) => {\r\n      helper.logger.error('NewPrefix ' + err.message, genError(err, req))\r\n      next(err)\r\n    })\r\n}\r\n\r\nentryRouter.post('/', NewPrefix, (req, res) => {\r\n  req.body.numPrefix = res.data.prefix\r\n  let newEntry = FormatEntry(req.body)\r\n  newEntry.userId = req.session.user.id\r\n  delete newEntry.id\r\n  delete newEntry.empty\r\n\r\n  Entry.create(newEntry)\r\n    .then((ent) => {\r\n      res.json({\r\n        message: 'save success',\r\n        messageType: 'success',\r\n        data: FormatEntry(ent)\r\n      })\r\n    })\r\n    .catch((err) => {\r\n      helper.logger.error(err.message, genError(err, req))\r\n      res.json({\r\n        message: `error: ${err.message}`,\r\n        messageType: 'danger'\r\n      })\r\n    })\r\n})\r\n\r\nentryRouter.get('/all', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.findAndCountAll()\r\n      .then((results) => {\r\n        let entries = []\r\n        results.rows.forEach((entry, i) => {\r\n          entries.push(FormatEntry(entry))\r\n        })\r\n        res.json({\r\n          message: 'all entries loaded',\r\n          entries,\r\n          count: results.count,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.post('/dt', getPosition, (req, res) => {\r\n  process.nextTick(() => {\r\n    let draw = parseInt(req.body.draw, 10)\r\n    let offset = parseInt(req.body.start, 10)\r\n    let limit = parseInt(req.body.length, 10)\r\n    let xOc = parseInt(req.body.order[0].column, 10)\r\n    let xOcName = req.body.columns[xOc].data\r\n    let xOd = req.body.order[0].dir\r\n    let order = [[xOcName, xOd]]\r\n    let results = []\r\n    let where = {}\r\n    if (Object.keys(req.query).length != 0) {\r\n      // { no: '001', name: 'andita', from: '2021-07-23', to: '2021-07-24' }\r\n      where[Op.or] = []\r\n      if (helper.funct.validValue(req.query.no)) {\r\n        where[Op.or].push({\r\n          numPrefix: {\r\n            [Op.like]: `%${req.query.no}%`\r\n          }\r\n        })\r\n      }\r\n\r\n      if (helper.funct.validValue(req.query.name)) {\r\n        let qName = req.query.name.toLowerCase();\r\n        where[Op.or].push(\r\n          Sequelize.where(\r\n            Sequelize.fn('lower', Sequelize.col('granteeName')), { [Op.like]: `%${qName}%` }\r\n          )\r\n        )\r\n      }\r\n\r\n      if (helper.funct.validValue(req.query.pos)) {\r\n        where[Op.or].push(\r\n          {\r\n            granteePosition: req.query.pos\r\n          }\r\n        )\r\n      }\r\n\r\n      if (helper.funct.validValue(req.query.from)) {\r\n        where[Op.or].push(\r\n          {\r\n            travelDate: {\r\n              [Op.gte]: req.query.from\r\n            }\r\n          }\r\n        )\r\n\r\n        if (helper.funct.validValue(req.query.to)) {\r\n          where[Op.or].pop()\r\n          where[Op.or].push(\r\n            {\r\n              travelDate: {\r\n                [Op.and]: [\r\n                  { [Op.gte]: req.query.from },\r\n                  { [Op.lte]: req.query.to }\r\n                ]\r\n              }\r\n            }\r\n          )\r\n        }\r\n\r\n      } else if (helper.funct.validValue(req.query.to)) {\r\n        where[Op.or].push(\r\n          {\r\n            travelDate: {\r\n              [Op.lte]: req.query.to\r\n            }\r\n          }\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n    Entry.findAndCountAll(\r\n      {\r\n        where,\r\n        offset,\r\n        limit,\r\n        order,\r\n      }\r\n    )\r\n      .then((data) => {\r\n        data.rows.forEach((v, i) => {\r\n          results.push(FormatEntryTable(v, res.data.position))\r\n        })\r\n        // console.log('ENTRY', results)\r\n        res.json({\r\n          draw,\r\n          recordsTotal: data.count,\r\n          recordsFiltered: data.count,\r\n          data: results\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.post('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    let editedEntry = FormatEntry(req.body)\r\n    editedEntry.userId = req.session.user.id\r\n    delete editedEntry.id\r\n    delete editedEntry.empty\r\n\r\n    Entry.findByPk(req.params.id)\r\n      .then((entry) => {\r\n        entry.update(editedEntry)\r\n        res.json({\r\n          message: `Entry ${editedEntry.numCombined} updated`,\r\n          messageType: 'success',\r\n          data: editedEntry\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.get('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.findByPk(req.params.id)\r\n      .then((entry) => {\r\n        let data = FormatEntry(entry)\r\n        res.json({\r\n          message: 'entry loaded',\r\n          messageType: 'primary',\r\n          data,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.delete('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.destroy({\r\n      where: {\r\n        id: req.params.id\r\n      }\r\n    })\r\n      .then((result) => {\r\n        res.json({\r\n          message: `entry with id ${req.params.id} deleted!`,\r\n          messageType: 'danger',\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nexport default entryRouter"],"file":"entry.api.js"}