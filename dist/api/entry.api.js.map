{"version":3,"sources":["../../src/api/entry.api.js"],"names":["entryRouter","Entry","db","FormatEntry","ent","newEntry","id","grantorName","granteeName","granteePosition","travelDeparture","travelDestination","travelType","travelReason","travelArrival","travelArrivalDate","travelDate","travelLength","guarantorName","otherInfo","numPrefix","numMiddle","numPostfix","numYear","numCombined","undefined","userId","empty","post","req","res","process","nextTick","body","session","user","create","then","json","message","messageType","data","err","get","findAndCountAll","results","entries","rows","forEach","entry","i","push","count","errmsg","draw","parseInt","offset","start","limit","length","xOc","order","column","xOcName","columns","xOd","dir","where","Object","keys","query","Op","or","helper","funct","validValue","no","like","name","qName","toLowerCase","Sequelize","fn","col","from","gte","to","pop","and","lte","v","recordsTotal","recordsFiltered","editedEntry","findByPk","params","update","destroy","result"],"mappings":"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","sourcesContent":["import { Router } from 'express'\r\nimport db from '../helper/db'\r\nimport helper from '../helper'\r\nimport { Op, Sequelize } from 'sequelize'\r\n\r\nconst entryRouter = Router()\r\nconst { Entry } = db\r\n\r\nfunction FormatEntry(ent) {\r\n  let newEntry = {}\r\n  newEntry.id = ent.id\r\n  newEntry.grantorName = ent.grantorName\r\n  newEntry.granteeName = ent.granteeName\r\n  newEntry.granteePosition = ent.granteePosition\r\n  newEntry.travelDeparture = ent.travelDeparture\r\n  newEntry.travelDestination = ent.travelDestination\r\n  newEntry.travelType = ent.travelType\r\n  newEntry.travelReason = ent.travelReason\r\n  newEntry.travelArrival = ent.travelArrival\r\n  newEntry.travelArrivalDate = ent.travelArrivalDate\r\n  newEntry.travelDate = ent.travelDate\r\n  newEntry.travelLength = ent.travelLength\r\n  newEntry.guarantorName = ent.guarantorName\r\n  newEntry.otherInfo = ent.otherInfo\r\n  newEntry.numPrefix = ent.numPrefix\r\n  newEntry.numMiddle = ent.numMiddle\r\n  newEntry.numPostfix = ent.numPostfix\r\n  newEntry.numYear = ent.numYear\r\n  newEntry.numCombined = (ent.numCombined == undefined || ent.numCombined == \"\") ? ent.numPrefix + ent.numMiddle + ent.numPostfix + ent.numYear : ent.numCombined\r\n  newEntry.userId = ent.userId\r\n  newEntry.empty = ''\r\n\r\n  return newEntry\r\n}\r\n\r\nentryRouter.post('/', (req, res) => {\r\n  process.nextTick(() => {\r\n    let newEntry = FormatEntry(req.body)\r\n    newEntry.userId = req.session.user.id\r\n    delete newEntry.id\r\n    delete newEntry.empty\r\n\r\n    Entry.create(newEntry)\r\n      .then((ent) => {\r\n        res.json({\r\n          message: 'save success',\r\n          messageType: 'success',\r\n          data: FormatEntry(ent)\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        res.json({\r\n          message: `error: ${err.message}`,\r\n          messageType: 'danger'\r\n        })\r\n      })\r\n\r\n  })\r\n})\r\n\r\nentryRouter.get('/all', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.findAndCountAll()\r\n      .then((results) => {\r\n        let entries = []\r\n        results.rows.forEach((entry, i) => {\r\n          entries.push(FormatEntry(entry))\r\n        })\r\n        res.json({\r\n          message: 'all entries loaded',\r\n          entries,\r\n          count: results.count,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.post('/dt', (req, res) => {\r\n  process.nextTick(() => {\r\n    let draw = parseInt(req.body.draw, 10)\r\n    let offset = parseInt(req.body.start, 10)\r\n    let limit = parseInt(req.body.length, 10)\r\n    let xOc = parseInt(req.body.order[0].column, 10)\r\n    let xOcName = req.body.columns[xOc].data\r\n    let xOd = req.body.order[0].dir\r\n    let order = [[xOcName, xOd]]\r\n    let results = []\r\n    let where = {}\r\n    if (Object.keys(req.query).length != 0) {\r\n      // { no: '001', name: 'andita', from: '2021-07-23', to: '2021-07-24' }\r\n      where[Op.or] = []\r\n      if (helper.funct.validValue(req.query.no)) {\r\n        where[Op.or].push({\r\n          numPrefix: {\r\n            [Op.like]: `%${req.query.no}%`\r\n          }\r\n        })\r\n      }\r\n\r\n      if (helper.funct.validValue(req.query.name)) {\r\n        let qName = req.query.name.toLowerCase();\r\n        where[Op.or].push(\r\n          Sequelize.where(\r\n            Sequelize.fn('lower', Sequelize.col('granteeName')), { [Op.like]: `%${qName}%` }\r\n          )\r\n        )\r\n      }\r\n\r\n      if (helper.funct.validValue(req.query.from)) {\r\n        where[Op.or].push(\r\n          {\r\n            travelDate: {\r\n              [Op.gte]: req.query.from\r\n            }\r\n          }\r\n        )\r\n\r\n        if (helper.funct.validValue(req.query.to)) {\r\n          where[Op.or].pop()\r\n          where[Op.or].push(\r\n            {\r\n              travelDate: {\r\n                [Op.and]: [\r\n                  { [Op.gte]: req.query.from },\r\n                  { [Op.lte]: req.query.to }\r\n                ]\r\n              }\r\n            }\r\n          )\r\n        }\r\n\r\n      } else if (helper.funct.validValue(req.query.to)) {\r\n        where[Op.or].push(\r\n          {\r\n            travelDate: {\r\n              [Op.lte]: req.query.to\r\n            }\r\n          }\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n    Entry.findAndCountAll(\r\n      {\r\n        where,\r\n        offset,\r\n        limit,\r\n        order,\r\n      }\r\n    )\r\n      .then((data) => {\r\n        data.rows.forEach((v, i) => {\r\n          results.push(FormatEntry(v))\r\n        })\r\n        // console.log('ENTRY', results)\r\n        res.json({\r\n          draw,\r\n          recordsTotal: data.count,\r\n          recordsFiltered: data.count,\r\n          data: results\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.post('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    let editedEntry = FormatEntry(req.body)\r\n    editedEntry.userId = req.session.user.id\r\n    delete editedEntry.id\r\n    delete editedEntry.empty\r\n\r\n    Entry.findByPk(req.params.id)\r\n      .then((entry) => {\r\n        entry.update(editedEntry)\r\n        res.json({\r\n          message: `Entry ${editedEntry.numCombined} updated`,\r\n          messageType: 'success',\r\n          data: editedEntry\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.get('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.findByPk(req.params.id)\r\n      .then((entry) => {\r\n        let data = FormatEntry(entry)\r\n        res.json({\r\n          message: 'entry loaded',\r\n          messageType: 'primary',\r\n          data,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.delete('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.destroy({\r\n      where: {\r\n        id: req.params.id\r\n      }\r\n    })\r\n      .then((result) => {\r\n        res.json({\r\n          message: `entry with id ${req.params.id} deleted!`,\r\n          messageType: 'danger',\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nexport default entryRouter"],"file":"entry.api.js"}