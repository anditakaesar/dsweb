{"version":3,"sources":["../../src/api/entry.api.js"],"names":["entryRouter","Entry","db","AddPositionName","entry","position","granteePositionName","newEntry","FormatEntryTable","post","req","res","process","nextTick","body","userId","session","user","id","empty","create","then","ent","json","message","messageType","data","err","helper","logger","error","get","findAndCountAll","results","entries","rows","forEach","i","push","count","errmsg","getPosition","draw","parseInt","offset","start","limit","length","xOc","order","column","xOcName","columns","xOd","dir","where","Object","keys","query","Op","or","funct","validValue","no","numPrefix","like","name","qName","toLowerCase","Sequelize","fn","col","pos","granteePosition","from","travelDate","gte","to","pop","and","lte","v","recordsTotal","recordsFiltered","editedEntry","findByPk","params","update","numCombined","destroy","result"],"mappings":"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","sourcesContent":["import { Router } from 'express'\r\nimport db from '../helper/db'\r\nimport helper from '../helper'\r\nimport { Op, Sequelize } from 'sequelize'\r\nimport FormatEntry from '../helper/entry'\r\nimport genError from '../helper/errorHelper'\r\nimport { getPosition, getPositionName } from '../routers/edit'\r\n\r\nconst entryRouter = Router()\r\nconst { Entry } = db\r\n\r\nfunction AddPositionName(entry, position = []) {\r\n  let granteePositionName = getPositionName(entry, position)\r\n  let newEntry = {\r\n    ...entry,\r\n    granteePositionName\r\n  }\r\n\r\n  return newEntry\r\n}\r\n\r\nfunction FormatEntryTable(entry, position = []) {\r\n  let newEntry = FormatEntry(entry)\r\n  newEntry = AddPositionName(newEntry, position)\r\n\r\n  return newEntry\r\n}\r\n\r\nentryRouter.post('/', (req, res) => {\r\n  process.nextTick(() => {\r\n    let newEntry = FormatEntry(req.body)\r\n    newEntry.userId = req.session.user.id\r\n    delete newEntry.id\r\n    delete newEntry.empty\r\n\r\n    Entry.create(newEntry)\r\n      .then((ent) => {\r\n        res.json({\r\n          message: 'save success',\r\n          messageType: 'success',\r\n          data: FormatEntry(ent)\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: `error: ${err.message}`,\r\n          messageType: 'danger'\r\n        })\r\n      })\r\n\r\n  })\r\n})\r\n\r\nentryRouter.get('/all', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.findAndCountAll()\r\n      .then((results) => {\r\n        let entries = []\r\n        results.rows.forEach((entry, i) => {\r\n          entries.push(FormatEntry(entry))\r\n        })\r\n        res.json({\r\n          message: 'all entries loaded',\r\n          entries,\r\n          count: results.count,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.post('/dt', getPosition, (req, res) => {\r\n  process.nextTick(() => {\r\n    let draw = parseInt(req.body.draw, 10)\r\n    let offset = parseInt(req.body.start, 10)\r\n    let limit = parseInt(req.body.length, 10)\r\n    let xOc = parseInt(req.body.order[0].column, 10)\r\n    let xOcName = req.body.columns[xOc].data\r\n    let xOd = req.body.order[0].dir\r\n    let order = [[xOcName, xOd]]\r\n    let results = []\r\n    let where = {}\r\n    if (Object.keys(req.query).length != 0) {\r\n      // { no: '001', name: 'andita', from: '2021-07-23', to: '2021-07-24' }\r\n      where[Op.or] = []\r\n      if (helper.funct.validValue(req.query.no)) {\r\n        where[Op.or].push({\r\n          numPrefix: {\r\n            [Op.like]: `%${req.query.no}%`\r\n          }\r\n        })\r\n      }\r\n\r\n      if (helper.funct.validValue(req.query.name)) {\r\n        let qName = req.query.name.toLowerCase();\r\n        where[Op.or].push(\r\n          Sequelize.where(\r\n            Sequelize.fn('lower', Sequelize.col('granteeName')), { [Op.like]: `%${qName}%` }\r\n          )\r\n        )\r\n      }\r\n\r\n      if (helper.funct.validValue(req.query.pos)) {\r\n        where[Op.or].push(\r\n          {\r\n            granteePosition: req.query.pos\r\n          }\r\n        )\r\n      }\r\n\r\n      if (helper.funct.validValue(req.query.from)) {\r\n        where[Op.or].push(\r\n          {\r\n            travelDate: {\r\n              [Op.gte]: req.query.from\r\n            }\r\n          }\r\n        )\r\n\r\n        if (helper.funct.validValue(req.query.to)) {\r\n          where[Op.or].pop()\r\n          where[Op.or].push(\r\n            {\r\n              travelDate: {\r\n                [Op.and]: [\r\n                  { [Op.gte]: req.query.from },\r\n                  { [Op.lte]: req.query.to }\r\n                ]\r\n              }\r\n            }\r\n          )\r\n        }\r\n\r\n      } else if (helper.funct.validValue(req.query.to)) {\r\n        where[Op.or].push(\r\n          {\r\n            travelDate: {\r\n              [Op.lte]: req.query.to\r\n            }\r\n          }\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n    Entry.findAndCountAll(\r\n      {\r\n        where,\r\n        offset,\r\n        limit,\r\n        order,\r\n      }\r\n    )\r\n      .then((data) => {\r\n        data.rows.forEach((v, i) => {\r\n          results.push(FormatEntryTable(v, res.data.position))\r\n        })\r\n        // console.log('ENTRY', results)\r\n        res.json({\r\n          draw,\r\n          recordsTotal: data.count,\r\n          recordsFiltered: data.count,\r\n          data: results\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.post('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    let editedEntry = FormatEntry(req.body)\r\n    editedEntry.userId = req.session.user.id\r\n    delete editedEntry.id\r\n    delete editedEntry.empty\r\n\r\n    Entry.findByPk(req.params.id)\r\n      .then((entry) => {\r\n        entry.update(editedEntry)\r\n        res.json({\r\n          message: `Entry ${editedEntry.numCombined} updated`,\r\n          messageType: 'success',\r\n          data: editedEntry\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.get('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.findByPk(req.params.id)\r\n      .then((entry) => {\r\n        let data = FormatEntry(entry)\r\n        res.json({\r\n          message: 'entry loaded',\r\n          messageType: 'primary',\r\n          data,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nentryRouter.delete('/:id', (req, res) => {\r\n  process.nextTick(() => {\r\n    Entry.destroy({\r\n      where: {\r\n        id: req.params.id\r\n      }\r\n    })\r\n      .then((result) => {\r\n        res.json({\r\n          message: `entry with id ${req.params.id} deleted!`,\r\n          messageType: 'danger',\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        helper.logger.error(err.message, genError(err, req))\r\n        res.json({\r\n          message: 'error',\r\n          errmsg: err.message,\r\n        })\r\n      })\r\n  })\r\n})\r\n\r\nexport default entryRouter"],"file":"entry.api.js"}