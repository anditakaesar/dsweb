{"version":3,"sources":["../src/app.js"],"names":["routers","helper","env","sessionStorage","configs","hbs","sessionCookieConfig","app","use","extended","contentSecurityPolicy","sync","name","SESSION_NAME","secret","COOKIES_SECRET","resave","saveUninitialized","cookie","store","express","path","join","__dirname","set","engine","req","res","next","data","title","error","Error","message_type","ALERT","PRIMARY","checkSessionApi","api","checkSession","routerAdmin","editRouter","routerAuth","get","loginRoute","err","meta","method","originalUrl","logger","message","status","json"],"mappings":"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","sourcesContent":["import express from 'express'\r\nimport { json, urlencoded } from 'body-parser'\r\nimport compression from 'compression'\r\nimport path from 'path'\r\nimport session from 'express-session'\r\nimport cookieParser from 'cookie-parser'\r\nimport helmet from 'helmet'\r\nimport helper from './helper'\r\nimport { checkSession, checkSessionApi } from './helper/sessionHelper'\r\nimport { ALERT } from './helper/css/alert'\r\nimport { loginRoute } from './routers/auth'\r\n\r\nconst { routers, env, sessionStorage } = helper\r\nconst { hbs, sessionCookieConfig } = helper.configs\r\n\r\nconst app = express()\r\n\r\n// middlewares\r\napp.use(json())\r\napp.use(urlencoded({ extended: true }))\r\napp.use(compression())\r\napp.use(\r\n  helmet({\r\n    contentSecurityPolicy: false,\r\n  }),\r\n)\r\n\r\n//session\r\nsessionStorage.sync()\r\napp.use(session({\r\n  name: env.SESSION_NAME,\r\n  secret: env.COOKIES_SECRET,\r\n  resave: false,\r\n  saveUninitialized: true,\r\n  cookie: sessionCookieConfig,\r\n  store: sessionStorage,\r\n}))\r\napp.use(cookieParser(env.COOKIES_SECRET))\r\n\r\n// static files\r\napp.use(express.static(path.join(__dirname, '../static')))\r\n\r\n//view engine\r\napp.set('views', path.join(__dirname, '../views'))\r\napp.set('view engine', 'hbs')\r\napp.engine('hbs', hbs.engine)\r\n\r\n// global routers\r\napp.use((req, res, next) => {\r\n  res.data = {}\r\n  res.data.title = 'DS Web'\r\n  res.data.error = new Error()\r\n  // res.data.error = {\r\n  //   message: 'error test',\r\n  //   meta: {\r\n  //     field1: 'some meta here',\r\n  //   },\r\n  // }\r\n  res.data.message_type = ALERT.PRIMARY\r\n  next()\r\n})\r\n\r\napp.use('/api', checkSessionApi, routers.api)\r\napp.use('/admin', checkSession, routers.routerAdmin)\r\napp.use('/edit', checkSession, routers.editRouter)\r\napp.use('/auth', routers.routerAuth)\r\n\r\napp.get('/', loginRoute)\r\n\r\n// error handling\r\napp.use((err, req, res, next) => {\r\n  let { error } = res.data\r\n  error.meta = {\r\n    ...error.meta,\r\n    method: req.method,\r\n    originalUrl: req.originalUrl,\r\n  }\r\n\r\n  helper.logger.error(error.message, error.meta)\r\n  \r\n  res.status(500).json({\r\n    message: 'Some error, please contact your developer',\r\n    error\r\n  })\r\n})\r\n\r\nexport default app"],"file":"app.js"}